# 🚗 Monitor Detector 系統說明

本專案是一套用於多視窗監控、車輛偵測、及即時 LINE 通知的桌面應用程式，採用模組化設計，方便維護與擴充。  
本說明將協助你快速瞭解系統架構與主要流程。

---

## 🏗️ 專案結構說明

```
.
├── main.py                  # 應用程式主入口，控制流程
├── MyWindow.py              # 由 .ui 轉換，包含介面設計
├── /module
│   ├── monitor_module.py    # 影像擷取與處理（有類別）
│   ├── detection_module.py  # 物件偵測邏輯（有類別）
│   └── communication_module.py # 通訊處理（有類別）
├── /utils                   # 工具方法（不含類別）
├── /windows                 # 純視覺介面
└── ...
```

> - **module 資料夾**：包含有類別的功能模組。
> - **utils 資料夾**：僅放工具函式，無類別。
> - **windows 資料夾**：純粹 UI 相關檔案。

---

## 🧩 系統執行流程

1. **視窗初始化**  
   使用者開啟 `main.py`，由 `MainWindow` 執行 `setup` 方法，產生 `SetupWindow` 實體。  
   - `SetupWindow` 會再開一個視窗，讓使用者輸入初始化參數。
   - 這裡有兩個設計方案可選，皆可達到參數初始化的目的。

2. **輸入管理員資訊**  
   根據偵測到或選擇的視窗數量，動態生成多組輸入框，讓使用者填寫每個視窗的管理員名稱、LINE token。

3. **確認與資料初始化**  
   使用者填寫完畢後，點擊「確認」，進入初始化介面 `LoadingWindow`。  
   - 主執行緒負責顯示初始化動畫（GIF），
   - 初始化資料會交給 `WorkerThread` 執行，完成後自動開啟主視窗。

4. **啟動主流程**  
   使用者按下主視窗的「Run」按鈕後，開始主要流程。

5. **影像擷取**  
   由 `monitor_module.py` 擷取特定視窗的影像。

6. **物件偵測**  
   將影像傳入 `detection_module.py`，回傳：
   - 圖片
   - 多組車輛資訊（由 `vehicle` 類別包裝，包括座標、車輛ID、停留幀數、類別、以及所屬區塊）

   > ⚠️ 圖片會分割成多個區塊（如 4、8、16 格），區塊定義暫放於 `detection_module.py`，可後續優化。

7. **通知判斷與推送**  
   由 `communication_module.py` 判斷是否需要通知（車輛資訊是否為空），如需通知則發送 LINE Notify。

8. **流程循環**  
   重複監控與偵測步驟，直到使用者點選「Stop」。

---

## 🏷️ vehicle 物件結構

| 屬性         | 說明                     |
|--------------|--------------------------|
| position     | 車輛座標位置             |
| id           | 車輛唯一識別碼           |
| stay_frames  | 停留幀數                 |
| category     | 車輛類別                 |
| area_block   | 落在哪個區塊（分格）     |

- 區塊設計可依需求增減，初始設計以簡單分格為主。

---

## 💡 設計理念

- **模組化**：每個功能明確分層、便於維護與擴充。
- **易用性**：介面友善，動態適應視窗數量。
- **即時性**：即時車輛偵測與 LINE 通知。
- **彈性**：區塊劃分與物件結構可彈性調整。

---

## 🛠️ 未來優化建議

- 區塊分格規則可移出 `detection_module.py`，設計更彈性的配置方式。
- 增加管理員多帳號通知邏輯。
- 支援更多通訊方式（如 Email、Telegram 等）。

---

## 📄 版本紀錄

- v1.0 系統架構與基本流程完成

---

如有問題或建議，歡迎提出 Issue 或 Pull Request！
